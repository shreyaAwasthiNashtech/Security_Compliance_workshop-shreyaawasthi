name: Gitleaks + Node.js CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Gitleaks
        run: |
          curl -sSfL https://github.com/gitleaks/gitleaks/releases/download/v8.28.0/gitleaks_8.28.0_linux_x64.tar.gz | tar -xz
          sudo mv gitleaks /usr/local/bin/gitleaks
          gitleaks version

      # BEFORE scan
      - name: Run Gitleaks BEFORE scan
        run: gitleaks detect --no-git --source . --config Day-1/.gitleaks.toml --verbose --redact --report-path gitleaks-before.json || true

      # Inject safe secrets dynamically (override hardcoded keys)
      - name: Inject secrets
        run: |
          echo "PORT=3000" > day1/.env
          echo "API_KEY=${{ secrets.API_KEY }}" >> day1/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> day1/.env
          sed -i 's/AKIA[0-9A-Z]\{16\}/REDACTED_BY_PIPELINE/g' day1/app.js

      # AFTER scan (should be zero leaks)
      - name: Run Gitleaks AFTER scan
        run: gitleaks detect --no-git --source . --config day1/.gitleaks.toml --verbose --redact --report-path gitleaks-after.json || true

      # Docker build & run
      - name: Build and run Node app
        run: |
          docker build -t devsecops-node-app ./day1
          docker run -d --env-file day1/.env -p 3000:3000 devsecops-node-app

      # Upload scan reports
      - name: Upload Gitleaks Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-reports
          path: |
            gitleaks-before.json
            gitleaks-after.json
